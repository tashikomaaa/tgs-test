[{"/mnt/c/Users/tashi/Documents/test_tgs/tgs-front/src/App.js":"1","/mnt/c/Users/tashi/Documents/test_tgs/tgs-front/src/Container/Home/index.js":"2","/mnt/c/Users/tashi/Documents/test_tgs/tgs-front/src/Components/SideBar/SideBarSearch.js":"3","/mnt/c/Users/tashi/Documents/test_tgs/tgs-front/src/Components/GoogleMap/index.js":"4","/mnt/c/Users/tashi/Documents/test_tgs/tgs-front/src/features/counter/counterSlice.js":"5","/mnt/c/Users/tashi/Documents/test_tgs/tgs-front/src/index.js":"6"},{"size":181,"mtime":1609102211711,"results":"7","hashOfConfig":"8"},{"size":1039,"mtime":1609102613248,"results":"9","hashOfConfig":"8"},{"size":6260,"mtime":1609102508212,"results":"10","hashOfConfig":"8"},{"size":2323,"mtime":1609104582886,"results":"11","hashOfConfig":"8"},{"size":1551,"mtime":1609102167235,"results":"12","hashOfConfig":"8"},{"size":644,"mtime":1609102167251,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"61xt0y",{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"18","messages":"19","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/mnt/c/Users/tashi/Documents/test_tgs/tgs-front/src/App.js",[],"/mnt/c/Users/tashi/Documents/test_tgs/tgs-front/src/Container/Home/index.js",["27"],"/mnt/c/Users/tashi/Documents/test_tgs/tgs-front/src/Components/SideBar/SideBarSearch.js",["28","29","30","31","32","33"],"import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Geocode from \"react-geocode\";\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nfunction Copyright() {\r\n    return (\r\n      <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n        {'Copyright © '}\r\n        <Link color=\"inherit\" href=\"https://thegoodseat.fr/\">\r\n          the good seat -test\r\n        </Link>{' '}\r\n        {new Date().getFullYear()}\r\n        {'.'}\r\n      </Typography>\r\n    );\r\n  }\r\n  Geocode.setApiKey()\r\n  const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      height: '100vh',\r\n    },\r\n    image: {\r\n      backgroundRepeat: 'no-repeat',\r\n      backgroundColor:\r\n        theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\r\n      backgroundSize: 'cover',\r\n      backgroundPosition: 'center',\r\n    },\r\n    paper: {\r\n      margin: theme.spacing(8, 4),\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n    },\r\n    avatar: {\r\n      margin: theme.spacing(1),\r\n      backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n      width: '100%', // Fix IE 11 issue.\r\n      marginTop: theme.spacing(1),\r\n      height: '100%'\r\n    },\r\n    submit: {\r\n      margin: theme.spacing(3, 0, 2),\r\n    },\r\n    inline: {\r\n        display: 'inline',\r\n      },\r\n  }));\r\nexport default function SideBarSearch() {\r\n    const classes = useStyles();\r\n    const [login, setLogin] = React.useState(false)\r\n    const [formData, setFormData] = React.useState(\r\n      {\r\n       startPoint: '',\r\n       endPoint: ''\r\n      }\r\n    );\r\n    console.log(formData)\r\n    const handleChange = (e) => {\r\n      e.preventDefault()\r\n      console.log(e.currentTarget.name)\r\n      const name = e.target.id;\r\n      const value = e.currentTarget.value;\r\n      console.log('name', name, 'value', value)\r\n      setFormData({...formData,\r\n        [name]: value\r\n      })\r\n      console.log(formData)\r\n    };\r\n  \r\n    const handleClick = () => {\r\n      setLogin(!login)\r\n    }\r\n  return (\r\n          <>\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n            Wher are we going ?\r\n          </Typography>\r\n          <form className={classes.form} noValidate>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"startPoint\"\r\n              label=\"Pickup Address\"\r\n              name=\"startPoint\"\r\n              autoFocus\r\n              onChange={(e) => handleChange(e)}\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"endPoint\"\r\n              label=\"Distination Adress\"\r\n              id=\"endPoint\"\r\n              onChange={(e) => handleChange(e)}\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n            >\r\n              Search\r\n            </Button>\r\n            <Grid container>\r\n              <Grid item>\r\n              <List className={classes.root}>\r\n      <ListItem alignItems=\"flex-start\">\r\n        <ListItemAvatar>\r\n          <Avatar alt=\"Remy Sharp\" src=\"/static/images/avatar/1.jpg\" />\r\n        </ListItemAvatar>\r\n        <ListItemText\r\n          primary=\"Uber\"\r\n          secondary={\r\n            <React.Fragment>\r\n              <Typography\r\n                component=\"span\"\r\n                variant=\"body2\"\r\n                className={classes.inline}\r\n                color=\"textPrimary\"\r\n              >\r\n                Ali Connors\r\n              </Typography>\r\n              {\" — good driver\"}\r\n            </React.Fragment>\r\n          }\r\n        />\r\n      </ListItem>\r\n      <Divider variant=\"inset\" component=\"li\" />\r\n      <ListItem alignItems=\"flex-start\">\r\n        <ListItemAvatar>\r\n          <Avatar alt=\"Travis Howard\" src=\"/static/images/avatar/2.jpg\" />\r\n        </ListItemAvatar>\r\n        <ListItemText\r\n          primary=\"Eech\"\r\n          secondary={\r\n            <React.Fragment>\r\n              <Typography\r\n                component=\"span\"\r\n                variant=\"body2\"\r\n                className={classes.inline}\r\n                color=\"textPrimary\"\r\n              >\r\n                to Scott, Alex, Jennifer\r\n              </Typography>\r\n              {\" — — good driver\"}\r\n            </React.Fragment>\r\n          }\r\n        />\r\n      </ListItem>\r\n      <Divider variant=\"inset\" component=\"li\" />\r\n      <ListItem alignItems=\"flex-start\">\r\n        <ListItemAvatar>\r\n          <Avatar alt=\"Cindy Baker\" src=\"/static/images/avatar/3.jpg\" />\r\n        </ListItemAvatar>\r\n        <ListItemText\r\n          primary=\"Uber\"\r\n          secondary={\r\n            <React.Fragment>\r\n              <Typography\r\n                component=\"span\"\r\n                variant=\"body2\"\r\n                className={classes.inline}\r\n                color=\"textPrimary\"\r\n              >\r\n                Sandra Adams\r\n              </Typography>\r\n              {' — — good driver'}\r\n            </React.Fragment>\r\n          }\r\n        />\r\n      </ListItem>\r\n    </List>\r\n              </Grid>\r\n            </Grid>\r\n            <Box mt={5}>\r\n              <Copyright />\r\n            </Box>\r\n          </form>\r\n          </>\r\n  );\r\n}\r\n","/mnt/c/Users/tashi/Documents/test_tgs/tgs-front/src/Components/GoogleMap/index.js",["34"],"/mnt/c/Users/tashi/Documents/test_tgs/tgs-front/src/features/counter/counterSlice.js",[],"/mnt/c/Users/tashi/Documents/test_tgs/tgs-front/src/index.js",[],{"ruleId":"35","severity":1,"message":"36","line":7,"column":8,"nodeType":"37","messageId":"38","endLine":7,"endColumn":21},{"ruleId":"35","severity":1,"message":"39","line":4,"column":8,"nodeType":"37","messageId":"38","endLine":4,"endColumn":19},{"ruleId":"35","severity":1,"message":"40","line":7,"column":8,"nodeType":"37","messageId":"38","endLine":7,"endColumn":24},{"ruleId":"35","severity":1,"message":"41","line":8,"column":8,"nodeType":"37","messageId":"38","endLine":8,"endColumn":16},{"ruleId":"35","severity":1,"message":"42","line":10,"column":8,"nodeType":"37","messageId":"38","endLine":10,"endColumn":13},{"ruleId":"35","severity":1,"message":"43","line":13,"column":8,"nodeType":"37","messageId":"38","endLine":13,"endColumn":24},{"ruleId":"35","severity":1,"message":"44","line":89,"column":11,"nodeType":"37","messageId":"38","endLine":89,"endColumn":22},{"ruleId":"35","severity":1,"message":"45","line":5,"column":8,"nodeType":"37","messageId":"38","endLine":5,"endColumn":15},"no-unused-vars","'SideBarSearch' is defined but never used.","Identifier","unusedVar","'CssBaseline' is defined but never used.","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'Paper' is defined but never used.","'LockOutlinedIcon' is defined but never used.","'handleClick' is assigned a value but never used.","'Geocode' is defined but never used."]